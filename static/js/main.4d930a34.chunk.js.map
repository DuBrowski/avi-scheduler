{"version":3,"sources":["components/FilePicker.js","components/ScheduleLoader.js","components/Board/Head.js","components/Board/Row.js","components/App.js","index.js"],"names":["FilePicker","props","className","class","tabIndex","multiple","name","type","id","onChange","e","fileList","target","files","Array","from","forEach","file","reader","FileReader","readAsText","onload","parseSchedule","result","onerror","console","error","htmlFor","ScheduleLoader","state","appts","curAppt","extractScheduleArray","contents","arr","removeTags","replace","split","mapScheduleArray","renderSchedule","scheduleArray","lastNameNext","firstNameNext","descriptionNext","appointments","cur","val","test","isPhoneNumber","lastName","firstName","description","time","slice","phone","fieldsFull","push","setState","formatFutureAppt","appt","FName","FDoctor","FTime","FDescription","obj","isFull","map","index","key","setParentState","this","React","Component","str","toString","Head","renderHead","Row","renderTableRows","App","setScheduleState","newArr","concat","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4d930a34.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FilePicker = (props) => {\r\n  const onFileChoose = (e) => {\r\n    const fileList = e.target.files;\r\n    Array.from(fileList).forEach((file) => {\r\n      let reader = new FileReader();\r\n      reader.readAsText(file);\r\n      reader.onload = () => {\r\n        props.parseSchedule(reader.result);\r\n      };\r\n      reader.onerror = () => {\r\n        console.error(reader.error);\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={props.class}\r\n        tabIndex=\"-2  \r\n      \"\r\n      >\r\n        <>\r\n          <input\r\n            multiple\r\n            name=\"file\"\r\n            type=\"file\"\r\n            id=\"file\"\r\n            onChange={onFileChoose}\r\n            className=\"inputfile\"\r\n          ></input>\r\n          <label className=\"button-content\" tabIndex=\"-1\" htmlFor=\"file\">\r\n            Choose File\r\n          </label>\r\n        </>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilePicker;\r\n","import React from 'react';\r\nimport FilePicker from './FilePicker';\r\n\r\nimport '../styles/button.css';\r\n\r\nclass ScheduleLoader extends React.Component {\r\n  state = {\r\n    appts: [],\r\n    curAppt: {},\r\n  };\r\n\r\n  extractScheduleArray = (contents) => {\r\n    let wholeStr, normalizedStr, arr;\r\n    if (contents) {\r\n      wholeStr = removeTags(contents);\r\n      normalizedStr = wholeStr.replace(/\\n/g, ' ');\r\n      arr = normalizedStr.split('BUFFER_ZONE_7');\r\n      this.mapScheduleArray(arr);\r\n      this.renderSchedule();\r\n    }\r\n  };\r\n\r\n  mapScheduleArray = (scheduleArray) => {\r\n    let lastNameNext = false,\r\n      firstNameNext = false,\r\n      descriptionNext = false,\r\n      appointments = [],\r\n      cur = {};\r\n\r\n    scheduleArray.forEach((val) => {\r\n      // Tests for having at least one character or is phone number\r\n      if (/([a-zA-Z])+([ -~])*/.test(val) || isPhoneNumber(val)) {\r\n        if (lastNameNext) {\r\n          cur.lastName = val;\r\n          lastNameNext = false;\r\n        } else if (firstNameNext) {\r\n          cur.firstName = val;\r\n          firstNameNext = false;\r\n        } else if (descriptionNext) {\r\n          cur.description = val;\r\n          descriptionNext = false;\r\n        } else if (/^([0-1]?[0-9]|2[0-3]):[0-5][0-9][a-z]$/.test(val)) {\r\n          // Tests for time format\r\n          cur.time = val.replace(':', '').slice(0, -1);\r\n          firstNameNext = true;\r\n        } else if (isPhoneNumber(val)) {\r\n          cur.phone = val;\r\n          firstNameNext = true;\r\n        } else if (val === 'CANINE' || val === 'FELINE') {\r\n          descriptionNext = true;\r\n        } else if (val.slice(0, 2) === 'RM') {\r\n          lastNameNext = true;\r\n        }\r\n        if (this.fieldsFull(cur)) {\r\n          appointments.push(cur);\r\n          cur = {};\r\n        }\r\n      }\r\n    });\r\n    this.setState({ appts: appointments });\r\n  };\r\n\r\n  formatFutureAppt = (appt) => {\r\n    return {\r\n      FName: appt.firstName + ' ' + appt.lastName.split(',')[0],\r\n      FDoctor: '',\r\n      FTime: appt.time,\r\n      FDescription: appt.description,\r\n    };\r\n  };\r\n\r\n  fieldsFull = (obj) => {\r\n    let isFull = false;\r\n    if (\r\n      obj.lastName &&\r\n      obj.firstName &&\r\n      obj.description &&\r\n      obj.time &&\r\n      obj.phone\r\n    ) {\r\n      isFull = true;\r\n    }\r\n    return isFull;\r\n  };\r\n\r\n  renderSchedule = () => {\r\n    const appointments = this.state.appts.map((appt, index) => {\r\n      return {\r\n        name: appt.firstName + ' ' + appt.lastName.split(',')[0],\r\n        time: appt.time,\r\n        description: appt.description,\r\n        phone: appt.phone,\r\n        key: index,\r\n      };\r\n    });\r\n    this.props.setParentState(appointments);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FilePicker\r\n          parseSchedule={this.extractScheduleArray}\r\n          class=\"button-primary\"\r\n        ></FilePicker>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Removes HTML tags from str, replaces with \"BUFFER_ZONE_7\"\r\nconst removeTags = (str) => {\r\n  if (str === null || str === '') return false;\r\n  else str = str.toString();\r\n  return str.replace(/(<([^>]+)>)/gi, 'BUFFER_ZONE_7');\r\n};\r\n\r\n// Returns true if str is phone number format\r\nconst isPhoneNumber = (str) =>\r\n  /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/.test(str);\r\n\r\nexport default ScheduleLoader;\r\n","import React from 'react';\r\n\r\nclass Head extends React.Component {\r\n\r\n    renderHead = () => {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Dr</th>\r\n                    <th>Tech</th>\r\n                    <th>Rm</th>\r\n                    <th>Time</th>\r\n                    <th>Description</th>\r\n                </tr>\r\n           </thead>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.renderHead();\r\n    }\r\n}\r\n\r\n\r\nexport default Head;","import React from 'react';\r\n\r\n\r\n\r\nclass Row extends React.Component {\r\n\r\n    renderTableRows = () => {\r\n        const appts = this.props.appts;\r\n        if (!appts) return null; \r\n        const scheduleRows = appts.map(appt => {\r\n            return (\r\n                <tr key={appt.index}>\r\n                    <td>{appt.name}</td>\r\n                    <td></td>\r\n                    <td>NEED</td>\r\n                    <td></td>\r\n                    <td>{appt.time}</td>\r\n                    <td>{appt.description}</td>\r\n                </tr>\r\n            );\r\n        });\r\n        return scheduleRows;\r\n\r\n    }\r\n\r\n    render() {\r\n        return this.renderTableRows();\r\n    }\r\n}\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport ScheduleLoader from './ScheduleLoader';\r\nimport Head from './Board/Head';\r\nimport Row from './Board/Row';\r\n\r\nimport '../styles/layout.css';\r\nimport '../styles/table.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    scheduleArray: [],\r\n  };\r\n\r\n  setScheduleState = (scheduleArray) => {\r\n    const newArr = this.state.scheduleArray.concat(scheduleArray);\r\n    this.setState({ scheduleArray: newArr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <ScheduleLoader setParentState={this.setScheduleState} />\r\n        </div>\r\n        <table>\r\n          <Head />\r\n          <tbody>\r\n            <Row appts={this.state.scheduleArray} />\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}