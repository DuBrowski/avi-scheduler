{"version":3,"sources":["components/ScheduleLoader.js","components/Board/Head.js","components/Board/Row.js","components/App.js","index.js"],"names":["ScheduleLoader","state","appts","curAppt","contents","openFilePicker","a","window","showOpenFilePicker","multiple","fileHandle","getFile","file","text","content","setState","console","error","name","message","extractScheduleArray","wholeStr","removeTags","normalizedStr","replace","arr","split","mapScheduleArray","renderSchedule","scheduleArray","lastNameNext","firstNameNext","descriptionNext","appointments","cur","forEach","val","test","isPhoneNumber","lastName","firstName","description","time","slice","phone","fieldsFull","push","formatFutureAppt","appt","FName","FDoctor","FTime","FDescription","obj","isFull","map","index","key","props","setParentState","className","onClick","this","React","Component","str","toString","Head","renderHead","Row","renderTableRows","App","setScheduleState","newArr","concat","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d4283192.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../styles/button.css';\r\n\r\nclass ScheduleLoader extends React.Component {\r\n\r\n    state = {\r\n        appts:[],\r\n        curAppt: {},\r\n        contents: ''\r\n    }\r\n\r\n    openFilePicker = async () => {\r\n        let fileHandle, file, content;\r\n        try {\r\n            [fileHandle] = await window.showOpenFilePicker({ multiple: true });\r\n            file = await fileHandle.getFile();\r\n            content = await file.text();\r\n            this.setState({contents: content});\r\n        }\r\n        catch (err) {\r\n            console.error(err.name, err.message);\r\n        }\r\n    }\r\n\r\n    extractScheduleArray = async () => {\r\n        let wholeStr, normalizedStr, arr;\r\n        if (this.state.contents) {\r\n            wholeStr = removeTags(this.state.contents);\r\n            normalizedStr = wholeStr.replace( /\\n/g, \" \" );\r\n            arr = normalizedStr.split('BUFFER_ZONE_7');\r\n            await this.mapScheduleArray(arr);\r\n            this.renderSchedule();\r\n        }\r\n    }\r\n\r\n    mapScheduleArray = (scheduleArray) => {\r\n        let \r\n            lastNameNext=false, \r\n            firstNameNext=false,\r\n            descriptionNext=false,\r\n            appointments = [],  \r\n            cur = {};\r\n    \r\n        scheduleArray.forEach(val => {\r\n    \r\n            // Tests for having at least one character or is phone number\r\n            if (/([a-zA-Z])+([ -~])*/.test(val) || isPhoneNumber(val)) {\r\n                if (lastNameNext ) {\r\n                    cur.lastName= val;\r\n                    lastNameNext = false;\r\n                } else if (firstNameNext) {\r\n                    cur.firstName= val;\r\n                    firstNameNext = false;\r\n                } else if (descriptionNext) {\r\n                    cur.description = val;\r\n                    descriptionNext = false;\r\n                } else if (/^([0-1]?[0-9]|2[0-3]):[0-5][0-9][a-z]$/.test(val)) { // Tests for time format\r\n                    cur.time = val.replace(':','').slice(0,-1);\r\n                    firstNameNext = true;\r\n                } else if (isPhoneNumber(val)) {\r\n                    cur.phone = val;\r\n                    firstNameNext = true;\r\n                } else if (val === 'CANINE' || val === 'FELINE') {\r\n                    descriptionNext = true;\r\n                } else if (val.slice(0,2) === 'RM') {\r\n                    lastNameNext = true;\r\n                }\r\n                if (this.fieldsFull(cur)) {\r\n                    appointments.push(cur);\r\n                    cur = {};\r\n                }\r\n            }\r\n        });\r\n        this.setState({appts:appointments});\r\n    }\r\n\r\n    formatFutureAppt = (appt) => {\r\n        return {\r\n            FName: appt.firstName + ' ' + appt.lastName.split(',')[0],\r\n            FDoctor: '',\r\n            FTime: appt.time,\r\n            FDescription: appt.description,\r\n        }\r\n    }\r\n\r\n    fieldsFull = (obj) => {\r\n        let isFull = false;\r\n        if (obj.lastName && obj.firstName && obj.description && obj.time && obj.phone) {\r\n            isFull= true;\r\n        }\r\n        return isFull;\r\n    }\r\n\r\n    renderSchedule = () => {\r\n        const appointments = this.state.appts.map((appt, index) => {\r\n            return {\r\n                name: appt.firstName + ' ' + appt.lastName.split(',')[0],\r\n                time: appt.time,\r\n                description: appt.description,\r\n                phone: appt.phone,\r\n                key: index\r\n            }\r\n        });\r\n        this.props.setParentState(appointments);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className=\"ui button primary\" onClick={this.openFilePicker}>Open File</button>\r\n                <button className=\"ui button secondary\" onClick={this.extractScheduleArray}>Load Schedule</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// Removes HTML tags from str, replaces with \"BUFFER_ZONE_7\"\r\nconst removeTags = (str) => {\r\n    if ((str===null) || (str==='')) return false;\r\n    else str = str.toString();\r\n    return str.replace( /(<([^>]+)>)/ig, 'BUFFER_ZONE_7');\r\n}\r\n\r\n// Returns true if str is phone number format\r\nconst isPhoneNumber = str => /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/.test(str);\r\n\r\nexport default ScheduleLoader;\r\n","import React from 'react';\r\n\r\nclass Head extends React.Component {\r\n\r\n    renderHead = () => {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Dr</th>\r\n                    <th>Tech</th>\r\n                    <th>Rm</th>\r\n                    <th>Time</th>\r\n                    <th>Description</th>\r\n                </tr>\r\n           </thead>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.renderHead();\r\n    }\r\n}\r\n\r\n\r\nexport default Head;","import React from 'react';\r\n\r\n\r\n\r\nclass Row extends React.Component {\r\n\r\n    renderTableRows = () => {\r\n        const appts = this.props.appts;\r\n        if (!appts) return null; \r\n        const scheduleRows = appts.map(appt => {\r\n            return (\r\n                <tr key={appt.index}>\r\n                    <td>{appt.name}</td>\r\n                    <td></td>\r\n                    <td>NEED</td>\r\n                    <td></td>\r\n                    <td>{appt.time}</td>\r\n                    <td>{appt.description}</td>\r\n                </tr>\r\n            );\r\n        });\r\n        return scheduleRows;\r\n\r\n    }\r\n\r\n    render() {\r\n        return this.renderTableRows();\r\n    }\r\n}\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport ScheduleLoader from './ScheduleLoader';\r\nimport Head from './Board/Head';\r\nimport Row from './Board/Row';\r\n\r\nimport '../styles/layout.css'\r\nimport '../styles/table.css';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        scheduleArray: []\r\n    }\r\n\r\n    setScheduleState = scheduleArray => {\r\n        const newArr = this.state.scheduleArray.concat(scheduleArray);\r\n        this.setState({scheduleArray: newArr});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <ScheduleLoader setParentState={this.setScheduleState}/>\r\n                </div>\r\n                <table className=\"ui celled table\">\r\n                    <Head/>\r\n                    <tbody>\r\n                        <Row appts= {this.state.scheduleArray}/>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}